{"version":3,"sources":["Redux/Store.jsx","components/Login/Login.jsx","components/Nav/Nav.jsx","components/Footer/Footer.jsx","components/Nav/Menu.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/Users/DetailUser.jsx","components/Users/RegisterUser.jsx","components/Body/Body.jsx","components/Body/Logout.jsx","components/Main.jsx","Router/RouterLink.jsx","App.js","serviceWorker.js","index.js"],"names":["initState","accounts","authToken","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread","editStatus","num","concat","toConsumableArray","newItem","filter","account","id","idAccount","Login","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","email","password","then","response","json","data","error","dispatch","window","sessionStorage","token","history","push","alert","error_message","catch","event","name","target","value","setState","defineProperty","_this2","react_default","a","createElement","react","charSet","httpEquiv","content","href","rel","className","placeholder","required","autoFocus","onChange","handleInput","htmlFor","onClick","sendData","Component","Nav","_Component","isShow","inherits","createClass","key","removeItem","role","data-toggle","aria-haspopup","aria-expanded","dropDownLogout","aria-labelledby","logOut","data-target","withRouter","Footer","Menu","react_router_dom","to","User","toSlug","str","toLowerCase","replace","url","X-Auth-Token","_this3","toString","position","office","age","start_date","salary","destroyUser","Users","fetchData","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","ok","Error","statusText","t0","stop","apply","match","params","registerUser","width","cellSpacing","map","index","Users_User","connect","DetailUser","_componentDidMount","fetchDataUser","_fetchDataUser","_callee2","_context2","defaultValue","updateUser","RegisterUser","Body","Menu_Menu","react_router","path","component","Footer_Footer","Logout","tabIndex","aria-hidden","data-dismiss","aria-label","Main","components_Nav_Nav","env_url","Body_Body","Logout_Logout","RouterLink","exact","App","RouterLink_RouterLink","Boolean","location","hostname","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f5ebad0.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nlet initState = {\n  accounts: [],\n  authToken: null\n}\n\nlet reducer = (state = initState, action) => {\n  switch (action.type) {\n      case \"Login\":\n        return { ...state, authToken: action.authToken }\n      case \"LOGOUT\":\n        return { ...state, authToken: null }\n      case \"CHANGE_EDIT\":\n        return { ...state, editStatus: !state.editStatus }\n      case \"LIST_USER\":\n        return { ...state, accounts: action.accounts }\n      case \"ADD_ITEM\":\n        return { ...state, num: [...state.num, action.newItem] }\n      case \"REMOVE_USER\":\n        const accounts = state.accounts.filter(account => account.id !== action.idAccount)\n        return { ...state, accounts: accounts }\n      default:\n        break;\n  }\n  return state\n}\n\nlet store = createStore(reducer)\n// subscribe\n// store.subscribe(() => {\n//   console.log(\"subscribe\", store.getState());\n// })\n\nexport default store\n","import React, { Component, Fragment } from 'react'\nimport store from '../../Redux/Store';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  sendData() {\n    fetch('https://react-exm.herokuapp.com/api/v1/account/sign_in', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n      }),\n    })\n    .then(response => {\n      return response.json()\n    })\n    .then(data => {\n      if(data.error === null){\n        store.dispatch({ type: 'Login', authToken: \"data\" })\n        window.sessionStorage.authToken = data.data.token\n        return (\n          this.props.history.push(`/dashboard`)\n        )\n      }else {\n        alert(data.error.error_message)\n      }\n    })\n    .catch(error => {\n      alert(error)\n    });\n  }\n\n  handleInput(event) {\n    let name = event.target.name;\n    let value = event.target.value;\n\n    this.setState(\n      {[name]: value}\n    )\n  }\n\n  handlePassword(event) {\n    this.setState({password: event.target.value})\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <meta charSet=\"utf-8\" />\n        <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n        <meta name=\"description\" content=\"true\" />\n        <meta name=\"author\" content=\"true\" />\n        <title>SB Admin - Login</title>\n        <link href=\"vendor/fontawesome-free/css/all.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n        <link href=\"css/sb-admin.css\" rel=\"stylesheet\" />\n        <div className=\"container\">\n          <div className=\"card card-login mx-auto mt-5\">\n            <div className=\"card-header\">Login</div>\n            <div className=\"card-body\">\n              <form>\n                <div className=\"form-group\">\n                  <div className=\"form-label-group\">\n                    <input type=\"email\" id=\"inputEmail\" className=\"form-control\" name=\"email\"\n                      placeholder=\"Email address\" required=\"required\" autoFocus=\"autofocus\" onChange={(event) => this.handleInput (event)} />\n                    <label htmlFor=\"inputEmail\">Email address</label>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"form-label-group\">\n                    <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" name=\"password\"\n                      required=\"required\" onChange={(event) => this.handleInput(event)} />\n                    <label htmlFor=\"inputPassword\">Password</label>\n                  </div>\n                </div>\n                <a className=\"btn btn-primary btn-block\" onClick={() => this.sendData()}>Login</a>\n              </form>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport store from '../../Redux/Store';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\n\nexport class Nav extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isShow: false\n    }\n  }\n\n  dropDownLogout() {\n    this.setState(\n      {\n        isShow: !this.state.isShow\n      }\n    );\n  }\n\n  logOut() {\n    window.sessionStorage.removeItem(\"authToken\");\n    this.props.history.push(\"/\")\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark static-top\">\n        <a className=\"navbar-brand mr-1\" href=\"index.html\">Start Bootstrap</a>\n        <button className=\"btn btn-link btn-sm text-white order-1 order-sm-0\" id=\"sidebarToggle\" href=\"#\">\n          <i className=\"fas fa-bars\" />\n        </button>\n        {/* Navbar Search */}\n        <form className=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n        </form>\n        {/* Navbar */}\n        <ul className=\"navbar-nav ml-auto ml-md-0\">\n          <li className={\"nav-item dropdown no-arrow \" + (this.state.isShow ? \"show\" : \"\")}>\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\"\n              aria-haspopup=\"true\" aria-expanded={this.state.isShow} onClick={() => this.dropDownLogout()}>\n              <i className=\"fas fa-user-circle fa-fw\" />\n            </a>\n            <div className={\"dropdown-menu dropdown-menu-right \" + (this.state.isShow ? \"show\" : \"\")} aria-labelledby=\"userDropdown\">\n              <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\"\n                onClick={() => this.logOut()} data-target=\"#logoutModal\">Logout</a>\n            </div>\n          </li>\n        </ul>\n      </nav>\n    )\n  }\n}\nexport default withRouter(Nav);\n","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"sticky-footer\">\n        <div className=\"container my-auto\">\n          <div className=\"copyright text-center my-auto\">\n            <span>Copyright © Your Website 2019</span>\n          </div>\n        </div>\n      </footer>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\n\nexport default class Menu extends Component {\n  render() {\n    return (\n      <ul className=\"sidebar navbar-nav\">\n        <li className=\"nav-item active\">\n        <Link className=\"nav-link\" to=\"/dashboard/\">\n          <i className=\"fas fa-fw fa-tachometer-alt\" />\n          <span>Dashboard</span>\n        </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/dashboard/users\">\n            <i className=\"fas fa-fw fa-chart-area\" />\n            <span>Users</span>\n          </Link>\n        </li>\n      </ul>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\nimport store from '../../Redux/Store';\nimport { withRouter } from 'react-router-dom';\n\nexport class User extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  // componentDidUpdate() {\n  //   if(!window.sessionStorage.authToken){\n  //     return this.props.history.push(\"/login\")\n  //   }\n  // }\n\n  toSlug = str => {\n    // Chuyển hết sang chữ thường\n    str = str.toLowerCase();\n\n    // xóa dấu\n    str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');\n    str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\n    str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\n    str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');\n    str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');\n    str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\n    str = str.replace(/(đ)/g, 'd');\n\n    // Xóa ký tự đặc biệt\n    str = str.replace(/([^0-9a-z-\\s])/g, '');\n\n    // Xóa khoảng trắng thay bằng ký tự -\n    str = str.replace(/(\\s+)/g, '-');\n\n    // xóa phần dự - ở đầu\n    str = str.replace(/^-+/g, '');\n\n    // xóa phần dư - ở cuối\n    str = str.replace(/-+$/g, '');\n\n    // return\n    return str;\n  }\n\n  destroyUser() {\n    let token = 'Bearer ' + window.sessionStorage.authToken\n    let url = \"https://react-exm.herokuapp.com/api/v1/accounts/\" + this.props.account.id\n    fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'X-Auth-Token': token,\n      }\n    })\n    .then(response => {\n      return response.json()\n    })\n    .then(data => {\n      if(data.error === null){\n        store.dispatch({ type: 'REMOVE_USER', idAccount: this.props.account.id })\n      }else {\n        alert(data.error.error_message)\n      }\n    })\n    .catch(error => {\n      alert(error)\n    });\n  }\n\n  render() {\n    return (\n      <tr>\n        <td><Link to={\"/dashboard/user/\" + this.toSlug(this.props.account.email) + \".\" + this.toSlug(this.props.account.id.toString())}>{this.props.account.email}</Link></td>\n        <td>{this.props.account.position}</td>\n        <td>{this.props.account.office}</td>\n        <td>{this.props.account.age}</td>\n        <td>{this.props.account.start_date}</td>\n        <td>{this.props.account.salary}</td>\n        <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => this.destroyUser()}>Remove</button></td>\n      </tr>\n    )\n  }\n}\n\nexport default withRouter(User);\n","import React, { Component } from 'react'\nimport User from './User';\nimport { connect } from 'react-redux'\nimport store from '../../Redux/Store';\n\nexport class Users extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidUpdate() {    \n    if(!window.sessionStorage.authToken){\n      return this.props.history.push(\"/\")\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  async fetchData() {\n    try {\n      let token = 'Bearer ' + window.sessionStorage.authToken\n      const response = await fetch(`https://react-exm.herokuapp.com/api/v1/accounts`, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'X-Auth-Token': token,\n        }\n      });\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      const json = await response.json();\n      store.dispatch({type: \"LIST_USER\", accounts: json.data.accounts})\n      // this.setState({ accounts: json.data.accounts });\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  registerUser() {\n    return (\n      this.props.history.push(`/dashboard/register_user`)\n    )\n  }\n\n  destroyUser() {\n    let token = 'Bearer ' + window.sessionStorage.authToken\n    let url = \"https://react-exm.herokuapp.com/api/v1/accounts/\" + this.props.match.params.id\n    fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'X-Auth-Token': token,\n      }\n    })\n    .then(response => {\n      return response.json()\n    })\n    .then(data => {\n      if(data.error === null){\n        return (\n          this.props.history.push(`/dashboard/users`)\n        )\n      }else {\n        alert(data.error.error_message)\n      }\n    })\n    .catch(error => {\n      alert(error)\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"content-wrapper\">\n          <div className=\"container-fluid\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"#\">Dashboard</a>\n              </li>\n              <li className=\"breadcrumb-item active\">List User</li>\n            </ol>\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">\n                <i className=\"fas fa-table\" />\n                List User\n              </div>\n              <div className=\"card-body\">\n                <div className=\"btn-align-left\">\n                  <button type=\"button\" className=\"btn btn-success\" onClick={() => this.registerUser()}>Create User</button>\n                </div>\n                <div className=\"table-responsive\">\n                  <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\n                    <thead>\n                      <tr>\n                        <th>Email</th>\n                        <th>Position</th>\n                        <th>Office</th>\n                        <th>Age</th>\n                        <th>Start date</th>\n                        <th>Salary</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    <tfoot>\n                      <tr>\n                        <th>Email</th>\n                        <th>Position</th>\n                        <th>Office</th>\n                        <th>Age</th>\n                        <th>Start date</th>\n                        <th>Salary</th>\n                        <th>Action</th>\n                      </tr>\n                    </tfoot>\n                    <tbody>\n                      {\n                        this.props.data.accounts.map((data, index) =>\n                          <User key={index} account={data}/>\n                        )\n                      }\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state\n  }\n}\n\nexport default connect(mapStateToProps)(Users)\n\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom';\n\nexport class DetailUser extends Component {\n  constructor(props) {    \n    super(props)\n    this.state = {\n      account: null\n    }\n  }\n\n  async componentDidMount() {    \n    await this.fetchDataUser()\n  }\n\n  componentDidUpdate() {\n    if(!window.sessionStorage.authToken){\n      return this.props.history.push(\"/\")\n    }\n  }\n\n  async fetchDataUser() {\n    try {\n      let url = \"https://react-exm.herokuapp.com/api/v1/accounts/\" + this.props.match.params.id\n      let token = 'Bearer ' + window.sessionStorage.authToken\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'X-Auth-Token': token,\n        }\n      });\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      const json = await response.json();\n      this.setState({ account: json.data.account });\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  updateUser() {\n    let token = 'Bearer ' + window.sessionStorage.authToken\n    let url = \"https://react-exm.herokuapp.com/api/v1/accounts/\" + this.props.match.params.id\n    fetch(url, {\n      method: 'PATCH',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'X-Auth-Token': token,\n      },\n      body: JSON.stringify(\n        this.state\n      ),\n    })\n    .then(response => {\n      return response.json()\n    })\n    .then(data => {\n      if(data.error === null){\n        this.props.history.push(`/dashboard/users`)\n      }else {\n        alert(data.error.error_message)\n      }\n    })\n    .catch(error => {\n      alert(error)\n    });\n  }\n\n  handleInput(event) {\n    let name = event.target.name;\n    let value = event.target.value;\n\n    this.setState(\n      {[name]: value}\n    )\n  }\n\n  render() {\n    return (\n      <form>\n        <div className=\"form-group row\">\n          <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Email</label>\n          <div className=\"col-sm-10\">\n            <input type=\"text\" className=\"form-control\" id=\"staticEmail\" placeholder=\"Email\" name=\"email\"\n              defaultValue={this.state.account && this.state.account.email || null} onChange={(event) => this.handleInput (event)} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"inputPosition\" className=\"col-sm-2 col-form-label\">Position</label>\n          <div className=\"col-sm-10\">\n            <input type=\"text\" className=\"form-control\" id=\"inputPosition\" placeholder=\"Postion\" name=\"position\"\n              defaultValue={this.state.account && this.state.account.position || null} onChange={(event) => this.handleInput (event)} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"inputOffice\" className=\"col-sm-2 col-form-label\">Office</label>\n          <div className=\"col-sm-10\">\n            <input type=\"text\" className=\"form-control\" id=\"inputOffice\" placeholder=\"Office\" name=\"office\"\n              defaultValue={this.state.account && this.state.account.office || null} onChange={(event) => this.handleInput (event)} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"inputAge\" className=\"col-sm-2 col-form-label\">Age</label>\n          <div className=\"col-sm-10\">\n            <input type=\"text\" className=\"form-control\" id=\"inputAge\" placeholder=\"Age\" name=\"age\"\n              defaultValue={this.state.account && this.state.account.age || null} onChange={(event) => this.handleInput (event)} />\n          </div>\n        </div>\n        <div className=\"w-80\">\n          <a className=\"btn btn-primary btn-block\" onClick={() => this.updateUser()}>Update</a>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(DetailUser);\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom';\n\nexport class RegisterUser extends Component {\n\n  handleInput(event) {\n    let name = event.target.name;\n    let value = event.target.value;\n\n    this.setState(\n      {[name]: value}\n    )\n  }\n\n  // componentDidUpdate() {\n  //   if(!window.sessionStorage.authToken){\n  //     return this.props.history.push(\"/login\")\n  //   }\n  // }\n\n  registerUser() {\n    let token = 'Bearer ' + window.sessionStorage.authToken\n    let url = \"https://react-exm.herokuapp.com/api/v1/accounts/\"\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'X-Auth-Token': token,\n      },\n      body: JSON.stringify(\n        this.state\n      ),\n    })\n    .then(response => {\n      return response.json()\n    })\n    .then(data => {\n      if(data.error === null){\n        return (\n          this.props.history.push(`/dashboard/users`)\n        )\n      }else {\n        alert(data.error.error_message)\n      }\n    })\n    .catch(error => {\n      alert(error)\n    });\n  }\n\n  render() {\n    return (\n      <form>\n        <div className=\"form-group row\">\n          <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Email</label>\n          <div className=\"col-sm-10\">\n            <input type=\"text\" className=\"form-control\" id=\"staticEmail\" placeholder=\"Email\" name=\"email\"\n              onChange={(event) => this.handleInput (event)} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"inputPosition\" className=\"col-sm-2 col-form-label\">Position</label>\n          <div className=\"col-sm-10\">\n            <input type=\"text\" className=\"form-control\" id=\"inputPosition\" placeholder=\"Postion\" name=\"position\"\n              onChange={(event) => this.handleInput (event)} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"inputOffice\" className=\"col-sm-2 col-form-label\">Office</label>\n          <div className=\"col-sm-10\">\n            <input type=\"text\" className=\"form-control\" id=\"inputOffice\" placeholder=\"Office\" name=\"office\"\n              onChange={(event) => this.handleInput (event)} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"inputAge\" className=\"col-sm-2 col-form-label\">Age</label>\n          <div className=\"col-sm-10\">\n            <input type=\"text\" className=\"form-control\" id=\"inputAge\" placeholder=\"Age\" name=\"age\"\n              onChange={(event) => this.handleInput (event)} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Password</label>\n          <div className=\"col-sm-10\">\n            <input type=\"password\" className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\" name=\"password\"\n              onChange={(event) => this.handleInput (event)} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label htmlFor=\"inputPasswordConfirmation\" className=\"col-sm-2 col-form-label\">Password Confirmation</label>\n          <div className=\"col-sm-10\">\n            <input type=\"password\" className=\"form-control\" id=\"inputPasswordConfirmation\" placeholder=\"Password Confirmation\" name=\"password_confirmation\"\n              onChange={(event) => this.handleInput (event)} />\n          </div>\n        </div>\n        <div className=\"w-80\">\n          <a className=\"btn btn-primary btn-block\" onClick={() => this.registerUser()}>Register User</a>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(RegisterUser);\n","import React, { Component } from 'react'\nimport Footer from '../Footer/Footer';\nimport Menu from '../Nav/Menu';\nimport Users from '../Users/Users';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport DetailUser from '../Users/DetailUser';\nimport RegisterUser from '../Users/RegisterUser';\n\nexport default class Body extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div id=\"wrapper\">\n        <Router>\n          <Menu/>\n          <div id=\"content-wrapper\">\n            <Route path=\"/dashboard/users\" component={Users} />\n            <Route path=\"/dashboard/user/:email.:id\" component={DetailUser} />\n            <Route path=\"/dashboard/register_user\" component={RegisterUser} />\n            <Footer/>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Logout extends Component {\n  render() {\n    return (\n      <div className=\"modal fade\" id=\"logoutModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\n              <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">Select \"Logout\" below if you are ready to end your current session.</div>\n            <div className=\"modal-footer\">\n              <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n              <a className=\"btn btn-primary\" href=\"login.html\">Logout</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport Nav from './Nav/Nav';\nimport Body from './Body/Body';\nimport Logout from './Body/Logout';\nimport { connect } from 'react-redux'\n\nexport class Main extends Component {\n  constructor(props){\n    super(props)\n  }\n\n  componentWillMount() {\n    if(!window.sessionStorage.authToken){\n      return this.props.history.push(\"/\")\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <meta charSet=\"utf-8\" />\n        <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n        <meta name=\"description\" content />\n        <meta name=\"author\" content />\n        <title>SB Admin - Dashboard</title>\n        <Nav env_url={this.props.env_url}/>\n        <Body env_url={this.props.env_url} />\n        <a className=\"scroll-to-top rounded\" href=\"#page-top\">\n          <i className=\"fas fa-angle-up\" />\n        </a>\n        <Logout env_url={this.props.env_url} />\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {  \n  return {\n    data: state\n  }\n}\n\nexport default connect(mapStateToProps)(Main);  \n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from '../components/Login/Login';\nimport Main from '../components/Main';\n\nexport default class RouterLink extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    return (\n      <Router>\n        <Route exact path=\"/\" component={Login} data={this.props.data} env_url={this.props.env_url} />\n        <Route path=\"/dashboard\" component={Main} data={this.props.data} env_url={this.props.env_url} />\n      </Router>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport './css/sb-admin.css';\nimport './vendor/fontawesome-free/css/all.min.css';\nimport './vendor/datatables/dataTables.bootstrap4.css';\nimport RouterLink from './Router/RouterLink';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <RouterLink data={this.props.data} env_url={\"http://172.16.1.18:8080\"}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Redux/Store';\nimport { Provider } from 'react-redux'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}